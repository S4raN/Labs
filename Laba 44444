#include <stdio.h>

#define n 20

int queue2[n];
int queue3[n];
int queue5[n];
int first2 = 0, first3 = 0, first5 = 0;
int dl2 = 0, dl3 = 0, dl5 = 0;

void add(int a, int prime) {
    switch (prime) {
        case 2:
            if (dl2 < n) {
                queue2[(first2 + dl2) % n] = a;
                dl2++;
            }
            break;
        case 3:
            if (dl3 < n) {
                queue3[(first3 + dl3) % n] = a;
                dl3++;
            }
            break;
        case 5:
            if (dl5 < n) {
                queue5[(first5 + dl5) % n] = a;
                dl5++;
            }
            break;
    }
}

int del(int prime) {
    int x = -1;
    switch (prime) {
        case 2:
            if (dl2 > 0) {
                x = queue2[first2];
                first2 = (first2 + 1) % n;
                dl2--;
            }
            break;
        case 3:
            if (dl3 > 0) {
                x = queue3[first3];
                first3 = (first3 + 1) % n;
                dl3--;
            }
            break;
        case 5:
            if (dl5 > 0) {
                x = queue5[first5];
                first5 = (first5 + 1) % n;
                dl5--;
            }
            break;
    }
    return x;
}

void printSequence(int n) {
    int num = 1;
    printf("First %d numbers with only 2, 3, and 5 as prime factors:\n", n);
    printf("%d ", num);
    add(2, 2);
    add(3, 3);
    add(5, 5);

    for (int i = 1; i < n; i++) {
        num = del(2);
        int num3 = del(3);
        int num5 = del(5);
        int min = (num < num3) ? num : num3;
        min = (min < num5) ? min : num5;

        printf("%d ", min);

        add(min * 2, 2);
        add(min * 3, 3);
        add(min * 5, 5);
    }
}

int main() {
    printSequence(20);
    return 0;
}
