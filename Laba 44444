#include <iostream>
#include <vector>
using namespace std;

int main() {
    int n, mas[500], len[500], maxlen = 0, m;
    vector<int> subsequence;

    len[0] = 1;
    cout << "Введите длину последовательности: ";
    cin >> n;

    cout << "Введите элементы последовательности: ";
    for (int i = 0; i < n; i++) {
        cin >> mas[i];
    }

    for (int i = 1; i < n; i++) {
        m = 0;
        for (int k = 0; k < i; k++) {
            if (mas[k] < mas[i])
                m = max(len[k], m);
        }
        len[i] = m + 1;
        maxlen = max(maxlen, len[i]);
    }

    // Находим индексы элементов, образующих наибольшую возрастающую подпоследовательность
    int index = 0;
    for (int i = 1; i < n; i++) {
        if (len[i] > len[index])
            index = i;
    }

    // Восстановление подпоследовательности
    subsequence.push_back(mas[index]);
    int currentLength = len[index] - 1;
    for (int i = index - 1; i >= 0; i--) {
        if (mas[i] < mas[index] && len[i] == currentLength) {
            subsequence.push_back(mas[i]);
            index = i;
            currentLength--;
        }
    }

    // Вывод подпоследовательности
    cout << "Наибольшая возрастающая подпоследовательность: ";
    for (int i = subsequence.size() - 1; i >= 0; i--) {
        cout << subsequence[i] << " ";
    }

    cout << endl;
    cout << "Количество элементов, не входящих в подпоследовательность: " << n - maxlen << endl;

    return 0;
}
